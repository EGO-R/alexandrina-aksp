plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.freefair.lombok' version '8.10'
}

allprojects {
    group = 'org.java4Me'
    version = '1.0-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'

    ext {
        versions = [
                'queryDslVersion': '5.0.0:jakarta',
                'jakarta': '3.1.0',
                'cloud': '4.1.5'
        ]
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.liquibase:liquibase-core'
        runtimeOnly 'org.postgresql:postgresql'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        afterEvaluate { project ->
            if (project.name == 'gateway') {
                dependencies {
                    implementation 'org.springframework.boot:spring-boot-starter-security'
//                    implementation "org.springframework.cloud:spring-cloud-starter-gateway:${versions.cloud}"
                    implementation 'org.springframework.boot:spring-boot-starter-webflux'
                }
            } else if (project.name == 'backend') {
                dependencies {
                    implementation 'org.springframework.data:spring-data-envers'

                    implementation "com.querydsl:querydsl-jpa:${versions.queryDslVersion}"
                    annotationProcessor "com.querydsl:querydsl-apt:${versions.queryDslVersion}"
                    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${versions.jakarta}"

                    testImplementation "org.testcontainers:postgresql"
                }
            }
        }
    }

    test {
        useJUnitPlatform()
    }
}



